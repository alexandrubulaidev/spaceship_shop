include: all_lint_rules.yaml
analyzer:
  language:
    strict-casts: false
    strict-inference: true
    strict-raw-types: true
  plugins:
    - dart_code_metrics
  exclude:
    - "**/build/**"
    - "**.g.dart"
  strong-mode:
    implicit-casts: true
    implicit-dynamic: true
  errors:
    todo: ignore
    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.
    # We explicitly enabled even conflicting rules and are fixing the conflict
    # in this file
    included_file_warning: ignore
    invalid_annotation_target: ignore

linter:
  rules:
    # Too verbose with little value, and this is taken care of by the Flutter devtool anyway.
    diagnostic_describe_all_properties: false

    # Conflicts with `prefer_single_quotes`
    # Single quotes are easier to type and don't compromise on readability.
    prefer_double_quotes: false

    # Conflicts with `omit_local_variable_types` and other rules.
    # As per Dart guidelines, we want to avoid unnecessary types to make the code
    # more readable.
    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables
    always_specify_types: false

    # Incompatible with `prefer_final_locals`
    # Having immutable local variables makes larger functions more predictable
    # so we will use `prefer_final_locals` instead.
    unnecessary_final: false

    # This project doesn't use Flutter-style todos
    flutter_style_todos: false

    # This project doesn't force the use of expression function bodies
    prefer_expression_function_bodies: false

    # Conflicts with disabling `implicit-dynamic`
    avoid_annotating_with_dynamic: false

    # Conflicts with `prefer_relative_imports`
    always_use_package_imports: false

    # Key can be defined when needed
    use_key_in_widget_constructors: false

    # Conflicts with 'prefer_final_parameters'
    avoid_final_parameters: false

    # Conflicts with localizations for flutter_gen package
    depend_on_referenced_packages: false

    # Using late is discouraged
    use_late_for_private_fields_and_variables: false

    # Conflicts with defining abstract classes for clean architecture
    one_member_abstracts: false

    # TODO: enable when other lints are fixed
    public_member_api_docs: false

dart_code_metrics:
  extends: all_dart_code_metrics_rules.yaml
  rules:
    - avoid-ignoring-return-values: false
    - avoid-non-ascii-symbols:
        exclude:
          - "**/*_test.dart"
    - prefer-conditional-expressions: false
    - avoid-non-null-assertion: true
    # TODO enable below
    - arguments-ordering: false
    - avoid-dynamic: false
    - avoid-nested-conditional-expressions: false
    - avoid-passing-async-when-sync-expected: false
    - avoid-top-level-members-in-tests: false
    - member-ordering: false
    - missing-test-assertion: false
    - no-empty-block: false
    - no-equal-arguments: false
    - no-magic-number: false
    - prefer-correct-identifier-length: false
    - prefer-correct-test-file-name: false
    - prefer-extracting-callbacks: false
    - prefer-moving-to-variable: false
    - prefer-static-class: false
    - avoid-redundant-async: false
    - format-comment: false
